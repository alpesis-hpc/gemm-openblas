#!/usr/bin/perl

# Changelog
# 2017/09/03 staticfloat
# Added zsymv and csymv into @lapackobjs2 so they are properly renamed
#
# 2017/07/01 Saar
# removed zsymv_ and csymv_ from @blasobs, because these functions
# are now in lapack-3.7.0
# added blas_thread_shutdown_
# added Cblas_cgemm3m and Cblas_zgemm3m
# added somatcopy_, simatcopy_ ...
# added new functions from lapack-3.7.0
# added LAPACKE deprecated objs from lapack-3.7.0
#
# 2017/08/01 Saar
# removed blas_thread_shutdown_
#
@blasobjs = (
    cgemm,
    dgemm,
    sgemm,
    zgemm,
);

@cblasobjs = (
    cblas_cgemm,
    cblas_dgemm, 
    cblas_sgemm,
    cblas_zgemm,
);

@exblasobjs = (
    qgemm,
    xgemm,
);

@gemm3mobjs = (
    cgemm3m,zgemm3m
);

@cblasgemm3mobjs = (
    cblas_cgemm3m,cblas_zgemm3m
);




#both underscore and no underscore
@misc_common_objs = (
    openblas_get_parallel,
    openblas_get_num_procs,
    openblas_set_num_threads,
    openblas_get_num_threads,
);

@misc_no_underscore_objs = (
    goto_set_num_threads,
    openblas_get_config,
    openblas_get_corename,
);

@misc_underscore_objs = (
);


if ($ARGV[8] == 1) {
    #ONLY_CBLAS=1
    @underscore_objs = (@misc_underscore_objs);
} elsif ($ARGV[5] == 1) {
    #NO_LAPACK=1
    @underscore_objs = (@blasobjs, @misc_underscore_objs);
} else {
    @underscore_objs = (@blasobjs, @lapackobjs, @misc_underscore_objs);
}

if ($ARGV[8] == 1) {
    #ONLY_CBLAS=1
    @gemm3mobjs=();
    @exblasobjs=();
}

if ($ARGV[3] == 1) {
    @underscore_objs = (@underscore_objs, @exblasobjs);
};

if ($ARGV[1] eq "x86_64") { @underscore_objs = (@underscore_objs, @gemm3mobjs); };
if ($ARGV[1] eq "x86")    { @underscore_objs = (@underscore_objs, @gemm3mobjs); };
if ($ARGV[1] eq "ia64")   { @underscore_objs = (@underscore_objs, @gemm3mobjs); };
if ($ARGV[1] eq "MIPS")   { @underscore_objs = (@underscore_objs, @gemm3mobjs); };


if ($ARGV[4] == 0) {
    @no_underscore_objs = (@cblasobjs, @misc_no_underscore_objs);
}else{
    #NO_CBLAS=1
    @no_underscore_objs = (@misc_no_underscore_objs);
}
if ($ARGV[6] == 1) {
    #NO_LAPACKE=1
    @no_underscore_objs = (@no_underscore_objs);
} else {
    if ($ARGV[11] == 1) {
        #BUILD_LAPACK_DEPRECATED=1
        @no_underscore_objs = (@no_underscore_objs, @lapackeobjs, @lapacke_deprecated_objs);
    } else {
        @no_underscore_objs = (@no_underscore_objs, @lapackeobjs);
    }
}

@hplobjs  = (dgemm);
@hplobjs2 = (HPL_dlaswp00N, HPL_dlaswp01N, HPL_dlaswp01T);

$bu = $ARGV[2];

$bu = "" if (($bu eq "0") || ($bu eq "1"));

$symbolprefix = $ARGV[9];

$symbolsuffix = $ARGV[10];

if ($ARGV[0] eq "osx") {
    @underscore_objs = (@underscore_objs, @misc_common_objs);
    @no_underscore_objs = (@no_underscore_objs, @misc_common_objs);

    foreach $objs (@underscore_objs) {
        print "_", $symbolprefix, $objs, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@need_2underscore_objs) {
        print "_", $symbolprefix, $objs, $bu, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@no_underscore_objs) {
        print "_", $symbolprefix, $objs, $symbolsuffix, "\n";
    }
    exit(0);
}

if ($ARGV[0] eq "aix"){
    @underscore_objs = (@underscore_objs, @misc_common_objs);
    @no_underscore_objs = (@no_underscore_objs, @misc_common_objs);

    foreach $objs (@underscore_objs) {
        print $symbolprefix, $objs, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@need_2underscore_objs) {
        print $symbolprefix, $objs, $bu, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@no_underscore_objs) {
        print $symbolprefix, $objs, $symbolsuffix, "\n";
    }
    exit(0);
}

if ($ARGV[0] eq "objcopy") {
    @underscore_objs = (@underscore_objs, @misc_common_objs);
    @no_underscore_objs = (@no_underscore_objs, @misc_common_objs);

    foreach $objs (@underscore_objs) {
        print $objs, $bu, " ", $symbolprefix, $objs, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@need_2underscore_objs) {
        print $objs, $bu, $bu, " ", $symbolprefix, $objs, $bu, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@no_underscore_objs) {
        print $objs, " ", $symbolprefix, $objs, $symbolsuffix, "\n";
    }
    exit(0);
}

if ($ARGV[0] eq "objconv") {
    @underscore_objs = (@underscore_objs, @misc_common_objs);
    @no_underscore_objs = (@no_underscore_objs, @misc_common_objs);

    foreach $objs (@underscore_objs) {
        print "-nr:_", $objs, $bu, ":_", $symbolprefix, $objs, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@need_2underscore_objs) {
        print "-nr:_", $objs, $bu, $bu, ":_", $symbolprefix, $objs, $bu, $bu, $symbolsuffix, "\n";
    }

    foreach $objs (@no_underscore_objs) {
        print "-nr:_", $objs, ":_", $symbolprefix, $objs, $symbolsuffix, "\n";
    }
    exit(0);
}

if ($ARGV[0] eq "win2k"){
    print "EXPORTS\n";
    $count = 1;

    @no_underscore_objs = (@no_underscore_objs, @misc_common_objs);

    foreach $objs (@underscore_objs) {
        $uppercase = $objs;
        $uppercase =~ tr/[a-z]/[A-Z]/;
        print "\t",$symbolprefix, $objs, $symbolsuffix, "=$objs","_  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $objs, "_", $symbolsuffix, "=$objs","_  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, $symbolsuffix, "=$objs", "_  \@", $count, "\n";
        $count ++;
    }

    foreach $objs (@need_2underscore_objs) {
        $uppercase = $objs;
        $uppercase =~ tr/[a-z]/[A-Z]/;
        print "\t",$symbolprefix, $objs, $symbolsuffix, "=$objs","__  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $objs, "__", $symbolsuffix, "=$objs","__  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, $symbolsuffix, "=$objs", "__  \@", $count, "\n";
        $count ++;
    }

    #for misc_common_objs
    foreach $objs (@misc_common_objs) {
        $uppercase = $objs;
        $uppercase =~ tr/[a-z]/[A-Z]/;
        print "\t",$symbolprefix, $objs, "_", $symbolsuffix, "=$objs","_  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, $symbolsuffix, "=$objs", "_  \@", $count, "\n";
        $count ++;
    }


    foreach $objs (@no_underscore_objs) {
        print "\t",$symbolprefix,$objs,$symbolsuffix,"=$objs","  \@", $count, "\n";
        $count ++;
    }

    exit(0);
}

if ($ARGV[0] eq "win2khpl") {
    print "EXPORTS\n";
    $count = 1;
    foreach $objs (@hplobjs) {
        $uppercase = $objs;
        $uppercase =~ tr/[a-z]/[A-Z]/;
        print "\t",$symbolprefix, $objs, $symbolsuffix, "=$objs","_  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $objs, "_", $symbolsuffix, "=$objs","_  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, $symbolsuffix, "=$objs", "_  \@", $count, "\n";
        $count ++;
    }

    exit(0);
}

if ($ARGV[0] eq "microsoft"){
    @underscore_objs = (@underscore_objs, @misc_common_objs);

    print "EXPORTS\n";
    $count = 1;
    foreach $objs (@underscore_objs) {
        $uppercase = $objs;
        $uppercase =~ tr/[a-z]/[A-Z]/;
        print "\t",$symbolprefix, $objs, $symbolsuffix, " = $objs","_\n";
        $count ++;
        print "\t",$symbolprefix, $objs, "\_", $symbolsuffix, " = $objs","_\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, $symbolsuffix, " = $objs","_\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, "\_", $symbolsuffix, " = $objs","_\n";
        $count ++;
    }

    foreach $objs (@need_2underscore_objs) {
        $uppercase = $objs;
        $uppercase =~ tr/[a-z]/[A-Z]/;
        print "\t",$symbolprefix, $objs, $symbolsuffix, "=$objs","__  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $objs, "__", $symbolsuffix, "=$objs","__  \@", $count, "\n";
        $count ++;
        print "\t",$symbolprefix, $uppercase, $symbolsuffix, "=$objs", "__  \@", $count, "\n";
        $count ++;
    }

    exit(0);
}

if ($ARGV[0] eq "linktest") {
    @underscore_objs = (@underscore_objs, @misc_common_objs);
    @no_underscore_objs = (@no_underscore_objs, @misc_common_objs);

    print "int main(void){\n";
    foreach $objs (@underscore_objs) {
        print $symbolprefix, $objs, $bu, $symbolsuffix, "();\n" if $objs ne "xerbla";
    }

    foreach $objs (@need_2underscore_objs) {
        print $symbolprefix, $objs, $bu, $bu, $symbolsuffix, "();\n";
    }

    foreach $objs (@no_underscore_objs) {
        print $symbolprefix, $objs, $symbolsuffix, "();\n";
    }

    print "return 0;}\n";
    exit(0);
}
